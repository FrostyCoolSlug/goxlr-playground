/*
 As with everything else, we're going to keep the values to these keys isolated in the USB crate
 and have alternatives for direct access in goxlr-shared, where we don't have to care about
 changes
*/

type EffectKeys = goxlr_shared::microphone::MicrophoneEffectKey;
type ParamKeys = goxlr_shared::microphone::MicrophoneParamKeys;

#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub(crate) enum MicrophoneParamKeys {
    MicType = 0x000,
    DynamicGain = 0x001,
    CondenserGain = 0x002,
    JackGain = 0x003,
    GateThreshold = 0x30200,
    GateAttack = 0x30400,
    GateRelease = 0x30600,
    GateAttenuation = 0x30900,
    CompressorThreshold = 0x60200,
    CompressorRatio = 0x60300,
    CompressorAttack = 0x60400,
    CompressorRelease = 0x60600,
    CompressorMakeUpGain = 0x60700,
    BleepLevel = 0x70100,

    /*
     These are the values for the GoXLR mini, it seems there's a difference in how the two
     are setup, The Mini does EQ via mic parameters, where as the full does it via effects.
    */
    Equalizer90HzFrequency = 0x40000,
    Equalizer90HzGain = 0x40001,
    Equalizer250HzFrequency = 0x40003,
    Equalizer250HzGain = 0x40004,
    Equalizer500HzFrequency = 0x40006,
    Equalizer500HzGain = 0x40007,
    Equalizer1KHzFrequency = 0x50000,
    Equalizer1KHzGain = 0x50001,
    Equalizer3KHzFrequency = 0x50003,
    Equalizer3KHzGain = 0x50004,
    Equalizer8KHzFrequency = 0x50006,
    Equalizer8KHzGain = 0x50007,
}

#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub(crate) enum MicrophoneEffectKeys {
    MicInputMute = 0x0158,
    BleepLevel = 0x0073,
    GateMode = 0x0010,
    GateThreshold = 0x0011,
    GateEnabled = 0x0014,
    GateAttenuation = 0x0015,
    GateAttack = 0x0016,
    GateRelease = 0x0017,
    MicCompSelect = 0x014b,
    Equalizer31HzFrequency = 0x0126,
    Equalizer31HzGain = 0x0127,
    Equalizer63HzFrequency = 0x00f8,
    Equalizer63HzGain = 0x00f9,
    Equalizer125HzFrequency = 0x0113,
    Equalizer125HzGain = 0x0114,
    Equalizer250HzFrequency = 0x0129,
    Equalizer250HzGain = 0x012a,
    Equalizer500HzFrequency = 0x0116,
    Equalizer500HzGain = 0x0117,
    Equalizer1KHzFrequency = 0x011d,
    Equalizer1KHzGain = 0x011e,
    Equalizer2KHzFrequency = 0x012c,
    Equalizer2KHzGain = 0x012d,
    Equalizer4KHzFrequency = 0x0120,
    Equalizer4KHzGain = 0x0121,
    Equalizer8KHzFrequency = 0x0109,
    Equalizer8KHzGain = 0x010a,
    Equalizer16KHzFrequency = 0x012f,
    Equalizer16KHzGain = 0x0130,
    CompressorThreshold = 0x013d,
    CompressorRatio = 0x013c,
    CompressorAttack = 0x013e,
    CompressorRelease = 0x013f,
    CompressorMakeUpGain = 0x0140,
    DeEsser = 0x000b,
    ReverbAmount = 0x0076,
    ReverbDecay = 0x002f,
    ReverbEarlyLevel = 0x0037,
    ReverbTailLevel = 0x0039, // Always sent as 0.
    ReverbPredelay = 0x0030,
    ReverbLowColor = 0x0032,
    ReverbHighColor = 0x0033,
    ReverbHighFactor = 0x0034,
    ReverbDiffuse = 0x0031,
    ReverbModSpeed = 0x0035,
    ReverbModDepth = 0x0036,
    ReverbType = 0x002e,
    EchoAmount = 0x0075,
    EchoFeedback = 0x0028,
    EchoTempo = 0x001f,
    EchoDelayL = 0x0022,
    EchoDelayR = 0x0023,
    EchoFeedbackL = 0x0024,
    EchoFeedbackR = 0x0025,
    EchoXFBLtoR = 0x0026,
    EchoXFBRtoL = 0x0027,
    EchoSource = 0x001e,
    EchoDivL = 0x0020,
    EchoDivR = 0x0021,
    EchoFilterStyle = 0x002a,
    PitchAmount = 0x005d,
    PitchCharacter = 0x0167,
    PitchThreshold = 0x0159,
    GenderAmount = 0x0060,
    MegaphoneAmount = 0x003c,
    MegaphonePostGain = 0x0040,
    MegaphoneStyle = 0x003a,
    MegaphoneHP = 0x003d,
    MegaphoneLP = 0x003e,
    MegaphonePreGain = 0x003f,
    MegaphoneDistType = 0x0041,
    MegaphonePresenceGain = 0x0042,
    MegaphonePresenceFC = 0x0043,
    MegaphonePresenceBW = 0x0044,
    MegaphoneBeatboxEnable = 0x0045,
    MegaphoneFilterControl = 0x0046,
    MegaphoneFilter = 0x0047,
    MegaphoneDrivePotGainCompMid = 0x0048,
    MegaphoneDrivePotGainCompMax = 0x0049,
    RobotLowGain = 0x0134,
    RobotLowFreq = 0x0133,
    RobotLowWidth = 0x0135,
    RobotMidGain = 0x013a,
    RobotMidFreq = 0x0139,
    RobotMidWidth = 0x013b,
    RobotHiGain = 0x0137,
    RobotHiFreq = 0x0136,
    RobotHiWidth = 0x0138,
    RobotWaveform = 0x0147,
    RobotPulseWidth = 0x0146,
    RobotThreshold = 0x0157,
    RobotDryMix = 0x014d,
    RobotStyle = 0x0000,
    HardTuneKeySource = 0x0059, // Always sent as 0.
    HardTuneAmount = 0x005a,
    HardTuneRate = 0x005c,
    HardTuneWindow = 0x005b,
    HardTuneScale = 0x005e,
    HardTunePitchAmount = 0x005f,

    RobotEnabled = 0x014e,
    MegaphoneEnabled = 0x00d7,
    HardTuneEnabled = 0x00d8,

    Encoder1Enabled = 0x00d5,
    Encoder2Enabled = 0x00d6,
    Encoder3Enabled = 0x0150,
    Encoder4Enabled = 0x0151,
}

impl From<EffectKeys> for MicrophoneEffectKeys {
    fn from(value: goxlr_shared::microphone::MicrophoneEffectKey) -> Self {
        match value {
            EffectKeys::MicInputMute => MicrophoneEffectKeys::MicInputMute,
            EffectKeys::BleepLevel => MicrophoneEffectKeys::BleepLevel,
            EffectKeys::GateMode => MicrophoneEffectKeys::GateMode,
            EffectKeys::GateThreshold => MicrophoneEffectKeys::GateThreshold,
            EffectKeys::GateEnabled => MicrophoneEffectKeys::GateEnabled,
            EffectKeys::GateAttenuation => MicrophoneEffectKeys::GateAttenuation,
            EffectKeys::GateAttack => MicrophoneEffectKeys::GateAttack,
            EffectKeys::GateRelease => MicrophoneEffectKeys::GateRelease,
            EffectKeys::MicCompSelect => MicrophoneEffectKeys::MicCompSelect,
            EffectKeys::Equalizer31HzFrequency => MicrophoneEffectKeys::Equalizer31HzFrequency,
            EffectKeys::Equalizer31HzGain => MicrophoneEffectKeys::Equalizer31HzGain,
            EffectKeys::Equalizer63HzFrequency => MicrophoneEffectKeys::Equalizer63HzFrequency,
            EffectKeys::Equalizer63HzGain => MicrophoneEffectKeys::Equalizer63HzGain,
            EffectKeys::Equalizer125HzFrequency => MicrophoneEffectKeys::Equalizer125HzFrequency,
            EffectKeys::Equalizer125HzGain => MicrophoneEffectKeys::Equalizer125HzGain,
            EffectKeys::Equalizer250HzFrequency => MicrophoneEffectKeys::Equalizer250HzFrequency,
            EffectKeys::Equalizer250HzGain => MicrophoneEffectKeys::Equalizer250HzGain,
            EffectKeys::Equalizer500HzFrequency => MicrophoneEffectKeys::Equalizer500HzFrequency,
            EffectKeys::Equalizer500HzGain => MicrophoneEffectKeys::Equalizer500HzGain,
            EffectKeys::Equalizer1KHzFrequency => MicrophoneEffectKeys::Equalizer1KHzFrequency,
            EffectKeys::Equalizer1KHzGain => MicrophoneEffectKeys::Equalizer1KHzGain,
            EffectKeys::Equalizer2KHzFrequency => MicrophoneEffectKeys::Equalizer2KHzFrequency,
            EffectKeys::Equalizer2KHzGain => MicrophoneEffectKeys::Equalizer2KHzGain,
            EffectKeys::Equalizer4KHzFrequency => MicrophoneEffectKeys::Equalizer4KHzFrequency,
            EffectKeys::Equalizer4KHzGain => MicrophoneEffectKeys::Equalizer4KHzGain,
            EffectKeys::Equalizer8KHzFrequency => MicrophoneEffectKeys::Equalizer8KHzFrequency,
            EffectKeys::Equalizer8KHzGain => MicrophoneEffectKeys::Equalizer8KHzGain,
            EffectKeys::Equalizer16KHzFrequency => MicrophoneEffectKeys::Equalizer16KHzFrequency,
            EffectKeys::Equalizer16KHzGain => MicrophoneEffectKeys::Equalizer16KHzGain,
            EffectKeys::CompressorThreshold => MicrophoneEffectKeys::CompressorThreshold,
            EffectKeys::CompressorRatio => MicrophoneEffectKeys::CompressorRatio,
            EffectKeys::CompressorAttack => MicrophoneEffectKeys::CompressorAttack,
            EffectKeys::CompressorRelease => MicrophoneEffectKeys::CompressorRelease,
            EffectKeys::CompressorMakeUpGain => MicrophoneEffectKeys::CompressorMakeUpGain,
            EffectKeys::DeEsser => MicrophoneEffectKeys::DeEsser,
            EffectKeys::ReverbAmount => MicrophoneEffectKeys::ReverbAmount,
            EffectKeys::ReverbDecay => MicrophoneEffectKeys::ReverbDecay,
            EffectKeys::ReverbEarlyLevel => MicrophoneEffectKeys::ReverbEarlyLevel,
            EffectKeys::ReverbTailLevel => MicrophoneEffectKeys::ReverbTailLevel,
            EffectKeys::ReverbPredelay => MicrophoneEffectKeys::ReverbPredelay,
            EffectKeys::ReverbLowColor => MicrophoneEffectKeys::ReverbLowColor,
            EffectKeys::ReverbHighColor => MicrophoneEffectKeys::ReverbHighColor,
            EffectKeys::ReverbHighFactor => MicrophoneEffectKeys::ReverbHighFactor,
            EffectKeys::ReverbDiffuse => MicrophoneEffectKeys::ReverbDiffuse,
            EffectKeys::ReverbModSpeed => MicrophoneEffectKeys::ReverbModSpeed,
            EffectKeys::ReverbModDepth => MicrophoneEffectKeys::ReverbModDepth,
            EffectKeys::ReverbType => MicrophoneEffectKeys::ReverbType,
            EffectKeys::EchoAmount => MicrophoneEffectKeys::EchoAmount,
            EffectKeys::EchoFeedback => MicrophoneEffectKeys::EchoFeedback,
            EffectKeys::EchoTempo => MicrophoneEffectKeys::EchoTempo,
            EffectKeys::EchoDelayL => MicrophoneEffectKeys::EchoDelayL,
            EffectKeys::EchoDelayR => MicrophoneEffectKeys::EchoDelayR,
            EffectKeys::EchoFeedbackL => MicrophoneEffectKeys::EchoFeedbackL,
            EffectKeys::EchoFeedbackR => MicrophoneEffectKeys::EchoFeedbackR,
            EffectKeys::EchoXFBLtoR => MicrophoneEffectKeys::EchoXFBLtoR,
            EffectKeys::EchoXFBRtoL => MicrophoneEffectKeys::EchoXFBRtoL,
            EffectKeys::EchoSource => MicrophoneEffectKeys::EchoSource,
            EffectKeys::EchoDivL => MicrophoneEffectKeys::EchoDivL,
            EffectKeys::EchoDivR => MicrophoneEffectKeys::EchoDivR,
            EffectKeys::EchoFilterStyle => MicrophoneEffectKeys::EchoFilterStyle,
            EffectKeys::PitchAmount => MicrophoneEffectKeys::PitchAmount,
            EffectKeys::PitchCharacter => MicrophoneEffectKeys::PitchCharacter,
            EffectKeys::PitchThreshold => MicrophoneEffectKeys::PitchThreshold,
            EffectKeys::GenderAmount => MicrophoneEffectKeys::GenderAmount,
            EffectKeys::MegaphoneAmount => MicrophoneEffectKeys::MegaphoneAmount,
            EffectKeys::MegaphonePostGain => MicrophoneEffectKeys::MegaphonePostGain,
            EffectKeys::MegaphoneStyle => MicrophoneEffectKeys::MegaphoneStyle,
            EffectKeys::MegaphoneHP => MicrophoneEffectKeys::MegaphoneHP,
            EffectKeys::MegaphoneLP => MicrophoneEffectKeys::MegaphoneLP,
            EffectKeys::MegaphonePreGain => MicrophoneEffectKeys::MegaphonePreGain,
            EffectKeys::MegaphoneDistType => MicrophoneEffectKeys::MegaphoneDistType,
            EffectKeys::MegaphonePresenceGain => MicrophoneEffectKeys::MegaphonePresenceGain,
            EffectKeys::MegaphonePresenceFC => MicrophoneEffectKeys::MegaphonePresenceFC,
            EffectKeys::MegaphonePresenceBW => MicrophoneEffectKeys::MegaphonePresenceBW,
            EffectKeys::MegaphoneBeatboxEnable => MicrophoneEffectKeys::MegaphoneBeatboxEnable,
            EffectKeys::MegaphoneFilterControl => MicrophoneEffectKeys::MegaphoneFilterControl,
            EffectKeys::MegaphoneFilter => MicrophoneEffectKeys::MegaphoneFilter,
            EffectKeys::MegaphoneDrivePotGainCompMid => {
                MicrophoneEffectKeys::MegaphoneDrivePotGainCompMid
            }
            EffectKeys::MegaphoneDrivePotGainCompMax => {
                MicrophoneEffectKeys::MegaphoneDrivePotGainCompMax
            }
            EffectKeys::RobotLowGain => MicrophoneEffectKeys::RobotLowGain,
            EffectKeys::RobotLowFreq => MicrophoneEffectKeys::RobotLowFreq,
            EffectKeys::RobotLowWidth => MicrophoneEffectKeys::RobotLowWidth,
            EffectKeys::RobotMidGain => MicrophoneEffectKeys::RobotMidGain,
            EffectKeys::RobotMidFreq => MicrophoneEffectKeys::RobotMidFreq,
            EffectKeys::RobotMidWidth => MicrophoneEffectKeys::RobotMidWidth,
            EffectKeys::RobotHiGain => MicrophoneEffectKeys::RobotHiGain,
            EffectKeys::RobotHiFreq => MicrophoneEffectKeys::RobotHiFreq,
            EffectKeys::RobotHiWidth => MicrophoneEffectKeys::RobotHiWidth,
            EffectKeys::RobotWaveform => MicrophoneEffectKeys::RobotWaveform,
            EffectKeys::RobotPulseWidth => MicrophoneEffectKeys::RobotPulseWidth,
            EffectKeys::RobotThreshold => MicrophoneEffectKeys::RobotThreshold,
            EffectKeys::RobotDryMix => MicrophoneEffectKeys::RobotDryMix,
            EffectKeys::RobotStyle => MicrophoneEffectKeys::RobotStyle,
            EffectKeys::HardTuneKeySource => MicrophoneEffectKeys::HardTuneKeySource,
            EffectKeys::HardTuneAmount => MicrophoneEffectKeys::HardTuneAmount,
            EffectKeys::HardTuneRate => MicrophoneEffectKeys::HardTuneRate,
            EffectKeys::HardTuneWindow => MicrophoneEffectKeys::HardTuneWindow,
            EffectKeys::HardTuneScale => MicrophoneEffectKeys::HardTuneScale,
            EffectKeys::HardTunePitchAmount => MicrophoneEffectKeys::HardTunePitchAmount,
            EffectKeys::RobotEnabled => MicrophoneEffectKeys::RobotEnabled,
            EffectKeys::MegaphoneEnabled => MicrophoneEffectKeys::MegaphoneEnabled,
            EffectKeys::HardTuneEnabled => MicrophoneEffectKeys::HardTuneEnabled,
            EffectKeys::Encoder1Enabled => MicrophoneEffectKeys::Encoder1Enabled,
            EffectKeys::Encoder2Enabled => MicrophoneEffectKeys::Encoder2Enabled,
            EffectKeys::Encoder3Enabled => MicrophoneEffectKeys::Encoder3Enabled,
            EffectKeys::Encoder4Enabled => MicrophoneEffectKeys::Encoder4Enabled,
        }
    }
}

impl From<ParamKeys> for MicrophoneParamKeys {
    fn from(value: ParamKeys) -> Self {
        match value {
            ParamKeys::MicType => MicrophoneParamKeys::MicType,
            ParamKeys::XLRGain => MicrophoneParamKeys::DynamicGain,
            ParamKeys::PhantomGain => MicrophoneParamKeys::CondenserGain,
            ParamKeys::TRSGain => MicrophoneParamKeys::JackGain,
            ParamKeys::GateThreshold => MicrophoneParamKeys::GateThreshold,
            ParamKeys::GateAttack => MicrophoneParamKeys::GateAttack,
            ParamKeys::GateRelease => MicrophoneParamKeys::GateRelease,
            ParamKeys::GateAttenuation => MicrophoneParamKeys::GateAttenuation,
            ParamKeys::CompressorThreshold => MicrophoneParamKeys::CompressorThreshold,
            ParamKeys::CompressorRatio => MicrophoneParamKeys::CompressorRatio,
            ParamKeys::CompressorAttack => MicrophoneParamKeys::CompressorAttack,
            ParamKeys::CompressorRelease => MicrophoneParamKeys::CompressorRelease,
            ParamKeys::CompressorMakeUpGain => MicrophoneParamKeys::CompressorMakeUpGain,
            ParamKeys::BleepLevel => MicrophoneParamKeys::BleepLevel,
            ParamKeys::Equalizer90HzFrequency => MicrophoneParamKeys::Equalizer90HzFrequency,
            ParamKeys::Equalizer90HzGain => MicrophoneParamKeys::Equalizer90HzGain,
            ParamKeys::Equalizer250HzFrequency => MicrophoneParamKeys::Equalizer250HzFrequency,
            ParamKeys::Equalizer250HzGain => MicrophoneParamKeys::Equalizer250HzGain,
            ParamKeys::Equalizer500HzFrequency => MicrophoneParamKeys::Equalizer500HzFrequency,
            ParamKeys::Equalizer500HzGain => MicrophoneParamKeys::Equalizer500HzGain,
            ParamKeys::Equalizer1KHzFrequency => MicrophoneParamKeys::Equalizer1KHzFrequency,
            ParamKeys::Equalizer1KHzGain => MicrophoneParamKeys::Equalizer1KHzGain,
            ParamKeys::Equalizer3KHzFrequency => MicrophoneParamKeys::Equalizer3KHzFrequency,
            ParamKeys::Equalizer3KHzGain => MicrophoneParamKeys::Equalizer3KHzGain,
            ParamKeys::Equalizer8KHzFrequency => MicrophoneParamKeys::Equalizer8KHzFrequency,
            ParamKeys::Equalizer8KHzGain => MicrophoneParamKeys::Equalizer8KHzGain,
        }
    }
}
